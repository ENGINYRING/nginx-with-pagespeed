# Brotli Configuration Example
# Include this in your server block or http block
# For more information: https://github.com/google/ngx_brotli

# Enable Brotli compression
brotli on;

# Set compression level (1-11, default is 6)
# Higher levels provide better compression but use more CPU
brotli_comp_level 6;

# Set minimum response length to compress (default 20 bytes)
brotli_min_length 20;

# Define MIME types to compress
brotli_types
    text/plain
    text/css
    text/xml
    text/javascript
    text/json
    application/javascript
    application/json
    application/xml
    application/rss+xml
    application/atom+xml
    application/x-javascript
    application/x-font-ttf
    application/vnd.ms-fontobject
    font/opentype
    image/svg+xml
    image/x-icon
    application/xhtml+xml
    application/ld+json
    application/manifest+json;

# Set buffer size for compression (default 4k)
brotli_buffers 16 8k;

# Set compression window size (default 512k)
brotli_window 512k;

# Configure Brotli for static files (pre-compressed)
# Enable serving of pre-compressed .br files
location ~ \.js$ {
    gzip_static on;
    brotli_static on;
}

location ~ \.css$ {
    gzip_static on;
    brotli_static on;
}

# Example server block with Brotli enabled
server {
    listen 80;
    server_name example.com;
    
    # Enable Brotli for this server
    brotli on;
    brotli_comp_level 6;
    brotli_types
        text/plain
        text/css
        text/xml
        text/javascript
        application/javascript
        application/json
        application/xml
        application/rss+xml
        application/atom+xml;
    
    # Also enable gzip as fallback for older browsers
    gzip on;
    gzip_vary on;
    gzip_min_length 1024;
    gzip_comp_level 6;
    gzip_types
        text/plain
        text/css
        text/xml
        text/javascript
        application/javascript
        application/json
        application/xml
        application/rss+xml
        application/atom+xml;
    
    location / {
        root /var/www/html;
        index index.html index.htm;
        
        # Add headers to indicate compression support
        add_header Vary Accept-Encoding;
    }
    
    # Serve pre-compressed static files
    location ~* \.(js|css|html|xml|txt)$ {
        gzip_static on;
        brotli_static on;
        expires 1y;
        add_header Cache-Control "public, immutable";
    }
}

# HTTPS server block with Brotli
server {
    listen 443 ssl http2;
    server_name example.com;
    
    ssl_certificate /path/to/cert.pem;
    ssl_certificate_key /path/to/key.pem;
    
    # Brotli works well with HTTPS
    brotli on;
    brotli_comp_level 6;
    brotli_types
        text/plain
        text/css
        text/xml
        text/javascript
        application/javascript
        application/json
        application/xml
        application/rss+xml
        application/atom+xml
        application/x-font-ttf
        application/vnd.ms-fontobject
        font/opentype
        image/svg+xml;
    
    # Enable gzip as fallback
    gzip on;
    gzip_vary on;
    gzip_types
        text/plain
        text/css
        text/xml
        text/javascript
        application/javascript
        application/json
        application/xml
        application/rss+xml
        application/atom+xml;
    
    location / {
        root /var/www/html;
        index index.html index.htm;
    }
}

# Performance tip: Pre-compress static files
# You can pre-compress your static files to save CPU:
#
# For JavaScript files:
# brotli -k file.js
# gzip -k file.js
#
# For CSS files:  
# brotli -k style.css
# gzip -k style.css
#
# This creates file.js.br, file.js.gz, style.css.br, style.css.gz
# nginx will automatically serve these when brotli_static/gzip_static is on
